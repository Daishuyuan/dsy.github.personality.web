class PainterMatrix{constructor(id,row,col,size){this.fillArray=function(value){let cols=[];cols.length=col;cols.fill(value);return cols;}this.void=0;this.backColor="#AAAAAA";this.row=row;this.col=col;this.range=size;this.space=5;this.canvas=document.getElementById(id);this.context=this.canvas.getContext("2d");this.matrix=[];this.special=[];this.colorTable=[];for(let i=0;i<row;++i){this.matrix.push(this.fillArray(this.void));this.colorTable.push(this.fillArray(this.backColor))}this.repainter()}step(x,y,action,color){let code=NaN;this.drawBlock(x,y,this.backColor);x+=action.x;y+=action.y;if(x>=0&&x<this.row&&y>=0&&y<this.col){this.drawBlock(x,y,color);code=this.matrix[x][y]}return[x,y,code]}getMatrix(){return this.matrix}repainter(){for(let i=0;i<this.row;++i){for(let j=0;j<this.col;++j){this.drawBlock(i,j,this.colorTable[i][j])}}}drawBlock(x,y,color){this.context.fillStyle=color;this.context.fillRect(y*(this.range+this.space),x*(this.range+this.space),this.range,this.range)}getSpecial(num){let array=[];for(let elem of this.special){if(elem.num==num){array.push(elem)}}return array}mouseConfigure(num,color,callback,multi){function tailCal(){self.canvas.onmousedown=null;window.onkeydown=null;callback()}let self=this;if(multi){window.onkeydown=function(e){if(e.code=="Enter"){tailCal()}}}this.canvas.onmousedown=function(e){if(e.buttons===1){let y=parseInt(e.clientX/(self.range+self.space))-1;let x=parseInt(e.clientY/(self.range+self.space))-1;if(x>=0&&x<self.row&&y>=0&&y<self.col&&self.matrix[x][y]==self.void){self.matrix[x][y]=num;self.drawBlock(x,y,color);self.colorTable[x][y]=color;self.special.push({x:x,y:y,num:num});if(!multi){tailCal()}}}}}}class infoPanel{constructor(id){this.logger=document.getElementById("logger")}log(info){this.logger.value=this.logger.value+"\n"+info}}class GameManager{constructor(row,col){const size=30;this.matrix=new PainterMatrix("envir",row,col,size);this.logger=new infoPanel("logger");this.actions=[{x:0,y:1},{x:1,y:0},{x:-1,y:0},{x:0,y:-1}];this.sarsaTable=new SarsaLamdaTable(this.actions,0.1,0.9,0.9);this.roleColor="#FF0000";this.barrierColor="#000000";this.finalColor="#0000FF";this.timerId=NaN;this.interval=10;this.count=0;this.startPoint=1;this.barrierPoint=2;this.endPoint=3;this.trainCount=100}setSpeed(speed){this.interval=speed}setCount(num){this.trainCount=num}init(){let self=this;self.speeking("请设置起始位置！");this.logger.log("请设置起始位置！");this.matrix.mouseConfigure(self.startPoint,self.roleColor,function(){self.speeking("起点设置完毕！");self.speeking("请设置障碍位置！键入 Enter 结束。");self.logger.log("起点设置完毕！");self.logger.log("请设置障碍位置！键入 Enter 结束。");self.matrix.mouseConfigure(self.barrierPoint,self.barrierColor,function(){self.speeking("障碍设置完毕！");self.speeking("请设置终点位置！");self.logger.log("障碍设置完毕！");self.logger.log("请设置终点位置！");self.matrix.mouseConfigure(self.endPoint,self.finalColor,function(){self.speeking("终点设置完毕！开始运行！");self.logger.log("终点设置完毕！");self.count=0;self.run(self.trainCount)})},true)})}speeking(msg){try{window.speechSynthesis.speak(new window.SpeechSynthesisUtterance(msg))}catch(e){console.log(e)}}deOber(observation){let strs=observation.split(",");return[parseInt(strs[0]),parseInt(strs[1])]}getActionId(action){for(let i=0;i<this.actions.length;++i){if(this.actions[i].x==action.x&&this.actions[i].y==action.y){return i}}}run(num){let self=this;if(num){self.matrix.repainter();let start=self.matrix.getSpecial(1)[0];let end=self.matrix.getSpecial(3)[0];let observation=start.x+","+start.y;let action=self.sarsaTable.choose_action(observation);self.timerId=setInterval(function(){let x,y,x_,y_,code,reward,done,observation_,cache,action_;[x,y]=self.deOber(observation);[x_,y_,code]=self.matrix.step(x,y,action,self.roleColor);observation_=x_+","+y_;if(code==self.endPoint){reward=1000;observation_='terminal';self.logger.log("找到了: "+(self.trainCount-num));self.count++;done=true}else if(code==self.barrierPoint||isNaN(code)){reward=-100;observation_='terminal';self.logger.log("没有找到: "+(self.trainCount-num));done=true}else{reward=-1;done=false}action_=self.sarsaTable.choose_action(observation_);self.sarsaTable.learn(observation,self.getActionId(action),reward,observation_,self.getActionId(action_));observation=observation_;action=action_;if(done){clearInterval(self.timerId);self.run(num-1)}},self.interval)}else{self.speeking("次数用完,共找到"+this.count+"次目标。");self.logger.log("次数用完运行结束共找到"+this.count+"次目标。")}}}var gm=new GameManager(4,4);gm.setCount(200);document.getElementById("start").onclick=function(){gm.init();document.getElementById("start").style.display="none"};